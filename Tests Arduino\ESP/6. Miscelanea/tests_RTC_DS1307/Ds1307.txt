#include <Wire.h>   // 
#define DS1307_I2C_ADDRESS 0x68

// Convierte números normales decimales a BCD (binario decimal codificado)
byte decToBcd(byte val)
{
  return ( (val/10*16) + (val%10) );
}

// Convierte BCD (binario decimal codificado) a números normales decimales 
byte bcdToDec(byte val)
{
  return ( (val/16*10) + (val%16) );
}

// Parar el DS1307, pero esto tiene el efecto secundario de que los segundos se ponen a 0 
// probablemente solo quiera usar esto para pruebas.
/*
void stopDs1307()
{
   Wire.beginTransmission(DS1307_I2C_ADDRESS);
   Wire.send(0);
   Wire.send(0x80);
   Wire.endTransmission();
}
*/

// 1) Sets the date and time on the ds1307
// 2) Starts the clock
// 3) Sets hour mode to 24 hour clock
// Assumes you're passing in valid numbers

void setDateDs1307(byte second,        // 0-59
                   byte minute,        // 0-59
                   byte hour,          // 1-23
                   byte dayOfWeek,     // 1-7
                   byte dayOfMonth,    // 1-28/29/30/31
                   byte month,         // 1-12
                   byte year)          // 0-99
{
   Wire.beginTransmission(DS1307_I2C_ADDRESS); // direccion 0x68 del ds1307
   Wire.send(0);                // inicia el puntero de la memoria del ds1307
   Wire.send(decToBcd(second)); // 0 a bit 7 inicia el reloj
   Wire.send(decToBcd(minute));
   Wire.send(decToBcd(hour)); // Si usted quiere 12 hora am/pm usted tiene que poner el 
                        //  bit 6 (tambien tiene que cambiar readDateDs1307)

    Wire.send(decToBcd(dayOfWeek));
   Wire.send(decToBcd(dayOfMonth));
   Wire.send(decToBcd(month));
   Wire.send(decToBcd(year));
   Wire.endTransmission();
}

// Establece la fecha y el tiempo del ds1307
void getDateDs1307(byte *second,
          byte *minute,
          byte *hour,
          byte *dayOfWeek,
          byte *dayOfMonth,
          byte *month,
          byte *year)
{
  // Resetea el registro puntero
  Wire.beginTransmission(DS1307_I2C_ADDRESS);
  Wire.send(0);
  Wire.endTransmission();

  Wire.requestFrom(DS1307_I2C_ADDRESS, 7);

  // Alguno de estos necesitan enmascarar porque ciertos bits son bits de control	

  *second     = bcdToDec(Wire.receive() & 0x7f);
  *minute     = bcdToDec(Wire.receive());
  *hour       = bcdToDec(Wire.receive() & 0x3f);  // Need to change this if 12 hour am/pm
  *dayOfWeek  = bcdToDec(Wire.receive());
  *dayOfMonth = bcdToDec(Wire.receive());
  *month      = bcdToDec(Wire.receive());
  *year       = bcdToDec(Wire.receive());
}

void setup()
{
  byte second, minute, hour, dayOfWeek, dayOfMonth, month, year;
  Wire.begin();
  Serial.begin(9600);

  // Cambie estos valores a los que usted quiere poner su reloj.
  // Usted probablemente solo quiere poner su reloj una vez y luego quitar 
  // la llamada de setDateDs1307.
 /*
  // si desea poner en hora, active esta parte y luego vuelva a quitarla
  second = 00;
  minute = 15;
  hour = 21;
  dayOfWeek = 6;
  dayOfMonth = 19;
  month = 9;
  year = 9;
  
  setDateDs1307(second, minute, hour, dayOfWeek, dayOfMonth, month, year); 
   */
}

void loop()
{
  byte second, minute, hour, dayOfWeek, dayOfMonth, month, year;

  getDateDs1307(&second, &minute, &hour, &dayOfWeek, &dayOfMonth, &month, &year);  

  Serial.print("20");
    if (year < 10) Serial.print("0");
  Serial.print(year, DEC);
  Serial.print("/");
    if (month < 10) Serial.print("0");
  Serial.print(month, DEC);  
  Serial.print("/");   
    if (dayOfMonth < 10) Serial.print("0");
  Serial.print(dayOfMonth, DEC); 
  Serial.print("  ");
    if (hour < 10) Serial.print("0");
  Serial.print(hour, DEC);
  Serial.print(":");  
    if (minute < 10) Serial.print("0");
  Serial.print(minute, DEC);
  Serial.print(":");
    if (second < 10) Serial.print("0");
  Serial.print(second, DEC);  
  Serial.print("  Dia de la semana:");  
//  Serial.println(dayOfWeek, DEC);
// Esto pone nombre del dia
    switch (dayOfWeek) 
	{
    case 1:
      Serial.println("  Lunes");       break;
    case 2:
      Serial.println("  Martes");      break;
    case 3:
      Serial.println("  Miercoles");   break;
    case 4:
      Serial.println("  Jueves");      break;
    case 5:
      Serial.println("  Viernes");     break;
    case 6:
      Serial.println("  Sabado");      break;
    case 7:
      Serial.println("  Domingo");     break;
   }

  delay(1000);
}